#!/usr/bin/env python3

import sys
import os

if __name__ == '__main__':
    if len(sys.argv) > 1 and sys.argv[1] == "bash_complete":
        from client.argparser import get_bash_complete
        print(get_bash_complete())
        exit(0)

    cas_dir = os.path.dirname(os.path.realpath(__file__))
    # this should bypas problems with execve of etrace_parser
    if cas_dir not in os.environ["PATH"]:
        os.environ["PATH"] = os.environ["PATH"] + f":{cas_dir}"

    try:
        import libetrace as _
    except ModuleNotFoundError:
        print("CAS libetrace not found - provide libetrace.so in directory or export directory with library to PYTHONPATH")
        print("eg. export PYTHONPATH=/home/j.doe/CAS/:$PYTHONPATH")
        sys.exit(2)

    from signal import signal, SIGPIPE, SIG_DFL

    signal(SIGPIPE, SIG_DFL)

    args = sys.argv[1:]

    if "--proc-tree" in args:
        import webbrowser
        import threading
        try:
            browser = webbrowser.get()
        except webbrowser.Error:
            print ("NO BROWSER")
        
        from cas_server import app
        from cas_server import translate_to_url

        url_args = translate_to_url(args)
        def browser_spawn():
            browser.open(f"http://0.0.0.0:8383/{url_args}", new=2)

        threading.Thread(target=browser_spawn).start()
        app.run("0.0.0.0", 8383)
    else:
        import os
        from typing import Generator,  Iterator
        import libcas
        from client.cmdline import process_commandline

        cas_db = libcas.CASDatabase()
        ret = process_commandline(cas_db)
        if ret:
            if isinstance(ret, Iterator):
                print(*ret, sep=os.linesep)
            elif isinstance(ret, Generator):
                print(*ret, sep=os.linesep)
            else:
                print(ret, flush=True)
        sys.exit(0)
