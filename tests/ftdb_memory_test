#!/usr/bin/env python3

import libftdb
import sys
import argparse
import os

parser = argparse.ArgumentParser(description="MAIN_DESCRIPTION", formatter_class=argparse.RawDescriptionHelpFormatter)
parser.add_argument('db_path', action="store")
parser.add_argument("--skip-function-tests", action="store_true", help="Skip performing function tests")
args = parser.parse_args()

base, ext = os.path.splitext(args.db_path)
dbimg_path = base+".img"

ftdb = libftdb.ftdb()
ftdb.load(dbimg_path)

while True:

	assert ftdb["sources"] is not None
	assert ftdb["source_info"] is not None 
	assert ftdb["modules"] is not None
	assert ftdb["module_info"] is not None
	assert ftdb["unresolvedfuncs"] is not None
	
	if "funcs_tree_calls_no_asm" in ftdb:
		assert ftdb.funcs_tree_calls_no_asm is not None
	if "funcs_tree_calls_no_known" in ftdb:
		assert ftdb.funcs_tree_calls_no_known is not None
	if "funcs_tree_calls_no_known_no_asm" in ftdb:
		assert ftdb.funcs_tree_calls_no_known_no_asm is not None
	if "funcs_tree_func_calls" in ftdb:
		assert ftdb.funcs_tree_func_calls is not None
	if "funcs_tree_func_refs" in ftdb:
		assert ftdb.funcs_tree_func_refs is not None
	if "funcs_tree_funrefs_no_asm" in ftdb:
		assert ftdb.funcs_tree_funrefs_no_asm is not None
	if "funcs_tree_funrefs_no_known" in ftdb:
		assert ftdb.funcs_tree_funrefs_no_known is not None
	if "funcs_tree_funrefs_no_known_no_asm" in ftdb:
		assert ftdb.funcs_tree_funrefs_no_known_no_asm is not None
	if "globs_tree_globalrefs" in ftdb:
		assert ftdb.globs_tree_globalrefs is not None
	if "types_tree_refs" in ftdb:
		assert ftdb.types_tree_refs is not None
	if "types_tree_usedrefs" in ftdb:
		assert ftdb.types_tree_usedrefs is not None
	if "static_funcs_map" in ftdb:
		assert ftdb.static_funcs_map is not None
	if "init_data" in ftdb:
		assert ftdb.init_data is not None
	if "known_data" in ftdb:
		assert ftdb.known_data is not None
	if "BAS" in ftdb:
		assert ftdb.BAS is not None

	assert ftdb["version"] is not None
	assert ftdb["module"] is not None
	assert ftdb["directory"] is not None
	assert ftdb["release"] is not None

	assert ftdb["funcdecln"] is not None
	assert ftdb["typen"] is not None
	assert ftdb["sourcen"] is not None
	assert ftdb["globaln"] is not None
	assert ftdb["unresolvedfuncn"] is not None
	assert ftdb["funcn"] is not None

	for i,f in enumerate(ftdb["funcs"]):
		if args.skip_function_tests: break
		sys.stdout.write("\rChecking functions: %d/%d"%(i+1,len(ftdb["funcs"])))
		sys.stdout.flush()
		assert f["id"] is not None
		assert f["hash"] is not None
		assert f["name"] is not None
		if "namespace" in f:
			assert f["namespace"] is not None
		assert f["fid"] is not None
		assert f["fids"] is not None
		assert f["nargs"] is not None
		assert f["variadic"] is not None
		assert f["firstNonDeclStmt"] is not None
		if "inline" in f:
			assert f["inline"] is not None
		if "template" in f:
			assert f["template"] is not None
		if "classOuterFn" in f:
			assert f["classOuterFn"] is not None
		assert f["linkage"] is not None
		if "member" in f:
			assert f["member"] is not None
		if "class" in f:
			assert f["class"] is not None
		if "classid" in f:
			assert f["classid"] is not None
		assert f["attributes"] is not None
		assert f["cshash"] is not None
		if "template_parameters" in f:
			assert f["template_parameters"] is not None
		assert f["body"] is not None
		assert f["unpreprocessed_body"] is not None
		assert f["declbody"] is not None
		assert f["signature"] is not None
		assert f["declhash"] is not None
		assert f["location"] is not None
		if "abs_location" in f:
			assert f["abs_location"] is not None
		assert f["start_loc"] is not None
		assert f["end_loc"] is not None
		assert f["refcount"] is not None
		assert f["declcount"] is not None
		assert f["literals"] is not None
		assert f["taint"] is not None
		assert f["calls"] is not None
		for i,ci in enumerate(f["call_info"]):
			assert ci["start"] is not None
			assert ci["end"] is not None
			assert ci["ord"] is not None
			assert ci["expr"] is not None
			assert ci["loc"] is not None
			assert ci["args"] is not None
		assert f["callrefs"] is not None
		assert f["refcalls"] is not None
		assert f["calls"] is not None
		assert f["calls"] is not None
		assert f["calls"] is not None
		for i,ci in enumerate(f["refcall_info"]):
			assert ci["start"] is not None
			assert ci["end"] is not None
			assert ci["ord"] is not None
			assert ci["expr"] is not None
			if "loc" in ci:
				assert ci["loc"] is not None
			assert ci["args"] is not None
		assert f["refcallrefs"] is not None
		for u,S in enumerate(f["switches"]):
			assert S["cases"] is not None
			assert S["condition"] is not None
		assert f["csmap"] is not None
		assert f["refcallrefs"] is not None
		for u,L in enumerate(f["locals"]):
			assert L["id"] is not None
			assert L["used"] is not None
			assert L["name"] is not None
			assert L["parm"] is not None
			assert L["static"] is not None
			assert L["location"] is not None
			assert L["type"] is not None
			assert L["id"] is not None
			if "csid" in L:
				assert L["csid"] is not None
		for u,D in enumerate(f["derefs"]):
			assert D["kind"] is not None
			if "offset" in D:
				assert D["offset"] is not None
			if "basecnt" in D:
				assert D["basecnt"] is not None
			for n,oref in enumerate(D["offsetrefs"]):
				assert oref["kind"] is not None
				assert oref["id"] is not None
				if "mi" in oref:
					assert oref["mi"] is not None
				if "di" in oref:
					assert oref["di"] is not None
				if "cast" in oref:
					assert oref["cast"] is not None
			assert D["expr"] is not None
			assert D["csid"] is not None
			assert D["ord"] is not None
			if "member" in D:
				assert D["member"] is not None
			if "type" in D:
				assert D["type"] is not None
			if "access" in D:
				assert D["access"] is not None
			if "shift" in D:
				assert D["shift"] is not None
			if "mcall" in D:
				assert D["mcall"] is not None
		for u,F in enumerate(f["ifs"]):
			assert F["refs"] is not None
			assert F["csid"] is not None
		assert f["asm"] is not None
		assert f["globalrefs"] is not None
		assert f["globalrefInfo"] is not None
		assert f["funrefs"] is not None
		assert f["refs"] is not None
		assert f["decls"] is not None
		assert f["types"] is not None
	print

	for i,T in enumerate(ftdb["types"]):
		sys.stdout.write("\rChecking types: %d/%d"%(i+1,len(ftdb["types"])))
		sys.stdout.flush()
		assert T["id"] is not None
		assert T["fid"] is not None
		assert T["hash"] is not None
		assert T["class"] is not None
		assert T["qualifiers"] is not None
		assert T["size"] is not None
		assert T["str"] is not None
		assert T["refcount"] is not None
		assert T["refs"] is not None
		if "usedrefs" in T:
			assert T["usedrefs"] is not None
		if "decls" in T:
			assert T["decls"] is not None
		if "def" in T:
			assert T["def"] is not None
		if "memberoffsets" in T:
			assert T["memberoffsets"] is not None
		if "attrrefs" in T:
			assert T["attrrefs"] is not None
		if "attrnum" in T:
			assert T["attrnum"] is not None
		if "name" in T:
			assert T["name"] is not None
		if "dependent" in T:
			assert T["dependent"] is not None
		if "globalrefs" in T:
			assert T["globalrefs"] is not None
		if "values" in T:
			assert T["values"] is not None
		if "outerfn" in T:
			assert T["outerfn"] is not None
		if "outerfnid" in T:
			assert T["outerfnid"] is not None
		if "implicit" in T:
			assert T["implicit"] is not None
		if "union" in T:
			assert T["union"] is not None
		if "refnames" in T:
			assert T["refnames"] is not None
		if "location" in T:
			assert T["location"] is not None
		if "variadic" in T:
			assert T["variadic"] is not None
		if "funrefs" in T:
			assert T["funrefs"] is not None
		if "useddef" in T:
			assert T["useddef"] is not None
		if "defhead" in T:
			assert T["defhead"] is not None
		if "identifiers" in T:
			assert T["identifiers"] is not None
		if "methods" in T:
			assert T["methods"] is not None
		if "bitfields" in T:
			assert T["bitfields"] is not None
	print

	for i,g in enumerate(ftdb["globals"]):
		sys.stdout.write("\rChecking globals: %d/%d"%(i+1,len(ftdb["globals"])))
		sys.stdout.flush()
		assert g["name"] is not None
		assert g["hash"] is not None
		assert g["id"] is not None
		assert g["fid"] is not None
		assert g["def"] is not None
		assert g["file"] is not None
		assert g["type"] is not None
		assert g["linkage"] is not None
		assert g["location"] is not None
		assert g["deftype"] is not None
		assert g["init"] is not None
		assert g["globalrefs"] is not None
		assert g["refs"] is not None
		assert g["funrefs"] is not None
		assert g["decls"] is not None
		assert g["literals"] is not None
		assert g["hasinit"] is not None
	print

	for i,fd in enumerate(ftdb["funcdecls"]):
		sys.stdout.write("\rChecking function declarations: %d/%d"%(i+1,len(ftdb["funcdecls"])))
		sys.stdout.flush()
		assert fd["name"] is not None
		assert fd["id"] is not None
		if "namespace" in fd:
			assert fd["namespace"] is not None
		assert fd["fid"] is not None
		assert fd["types"] is not None
		assert fd["decl"] is not None
		assert fd["variadic"] is not None
		if "namespace" in fd:
			assert fd["template"] is not None
		if "namespace" in fd:
			assert fd["member"] is not None
		if "namespace" in fd:
			assert fd["class"] is not None
		if "namespace" in fd:
			assert fd["classid"] is not None
		if "namespace" in fd:
			assert fd["template_parameters"] is not None
		assert fd["signature"] is not None
		assert fd["declhash"] is not None
		assert fd["nargs"] is not None
		assert fd["refcount"] is not None
		assert fd["location"] is not None
		assert fd["linkage"] is not None
	print