#!/usr/bin/env python3

import sys
import libftdb

ftdb = libftdb.ftdb()
ftdb.load(sys.argv[1],quiet=True)

print ("version: %s"%(ftdb.version))
print ("module: %s"%(ftdb.module))
print ("directory: %s"%(ftdb.directory))
print ("release: %s"%(ftdb.release))

print ("Number of sources: %d"%(len(ftdb.sources)))
for i,sT in enumerate(ftdb.sources):
	if i>=10 and i<len(ftdb.sources)-5:
		if i==10:
			print ("(...)")
		continue
	print ("[%d]: %s"%(sT[0],sT[1]))
print()

print ("Number of functions: %d"%(len(ftdb.funcs)))
for i,f in enumerate(ftdb.funcs):
	if i>=10 and i<len(ftdb.funcs)-5:
		if i==10:
			print ("(...)")
		continue
	print ("%s --> %s"%(f.name,f.declbody))
print()

print ("Number of globals: %d"%(len(ftdb.globals)))
for i,g in enumerate(ftdb.globals):
	if i>=10 and i<len(ftdb.globals)-5:
		if i==10:
			print ("(...)")
		continue
	print ("%s --> %s"%(g.name,g.defstring))
print()

print ("Number of types: %d"%(len(ftdb.types)))
print ("Number of plain struct types: %d"%(len([x for x in ftdb.types if x.classname=="record" and x.str!=""])))
for i,T in enumerate([x for x in ftdb.types if x.classname=="record" and x.str!=""]):
	if i>=10 and i<len(ftdb.types)-5:
		if i==10:
			print ("(...)")
		continue
	print ("struct %s"%(T.str))
print()