#!/usr/bin/env python3

import sys
import libetrace
from bas.ide import *

nfsdb = libetrace.nfsdb()
nfsdb.load(sys.argv[1],quiet=True)
nfsdb.load_deps(sys.argv[1][:-3]+"deps.img",quiet=True)

# Run it as:
# python3 <PATH TO>/examples/generate-pdf-files-for-kernel .nfsdb.json.img <SOURCE_ROOT> <OUTDIR> <project_name> [ <NEW_SOURCE_ROOT> ] [add_project_source:<int>]

# Getting linked vmlinux path and list of loadable kernel modules
L = [e.linked_file for e in nfsdb if e.is_linking() and (e.linked_file.path.endswith("vmlinux") or e.linked_file.path.endswith(".ko"))]

# Getting file dependencies for vmlinux kernel module and all loadable modules
deplst = set()
for f in L:
	excl_patterns = ["/dev/*"]
	if f.path.endswith(".ko"):
		excl_patterns.append("*.mod.c")
	r = nfsdb.mdeps(f.path)
	deplst|=set(r)
dep_paths = list(set([x.path for x in deplst]))
dep_pids = list(set([x.parent.eid.pid for x in deplst]))
print ("Total dependencies: %d"%(len(dep_paths)))
apgn = APGN(nfsdb)
source_root = sys.argv[2]
outdir = sys.argv[3]
remap_source_root = None
if len(sys.argv)>5:
	remap_source_root = [(source_root,sys.argv[5])]
add_project_source = False
if len(sys.argv)>6:
	add_project_source = int(sys.argv)!=0
apgn.generate_project_description_files(dep_paths,sys.argv[4],dep_pids,source_root,outdir,add_project_source=add_project_source,remap_source_root=remap_source_root)
